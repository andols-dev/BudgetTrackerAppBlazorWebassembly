@page "/"
@using Blazored.Toast.Configuration
@using BudgetTrackerAppBlazorWebassembly.Models
@using BudgetTrackerAppBlazorWebassembly.Services
@inject IExpensiveService ExpensiveService
@inject IIncomeService IncomeService
@inject IToastService ToastService


<BlazoredToasts Position="ToastPosition.TopRight"
Timeout="2"
ShowProgressBar="true" />
<div class="jumbotron text-center">
    <h1><i class="fas fa-wallet"></i> Budget Tracker</h1>
    <p class="lead">Track your incomes and expenses easily</p>
</div>
<div class="container mt-5">


    <div class="row mb-4">
        <div class="col-md-6">
            <h3>Add Income</h3>
            <div class="input-group">
                <input type="text" class="form-control" @bind="IncomeService.IncomeName" placeholder="Income name" />
                <input type="number" class="form-control" @bind="IncomeService.IncomeNumber" placeholder="Amount" />

                <button class="btn btn-success" @onclick="IncomeService.AddIncome">Add Income</button>
            </div>
        </div>
        <div class="col-md-6">
            <h3>Add Expense</h3>
            <div class="input-group">
                <input type="text" class="form-control" @bind="ExpensiveService.ExpenseName" placeholder="Expense Name" />
                <input type="number" class="form-control" @bind="ExpensiveService.ExpenseNumber"  placeholder="Amount"/>
                <button class="btn btn-success" @onclick="() => ExpensiveService.AddExpense()">Add Expense</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h3>Budget Summary</h3>
            <ul class="list-group">
                <li class="list-group-item">Total Income: <span class="float-end">@IncomeService.TotalIncome</span></li>
                <li class="list-group-item">Total Expenses: <span class="float-end">@ExpensiveService.TotalExpenses</span></li>
                <li class="list-group-item">Remaining Balance: <span class="float-end">@(IncomeService.TotalIncome - ExpensiveService.TotalExpenses)</span></li>
            </ul>
        </div>
    </div>
</div>
<h1>Expenses</h1>
<ul class="list-group">
    @if(ExpensiveService.Expenses.Any())
    {
        @foreach (var item in ExpensiveService.Expenses)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @item.Name @item.Amount
                <button class="btn btn-danger btn-sm">Remove Expense</button>
            </li>
        }
    }
    else
    {
        <li class="list-group-item">No expenses added yet.</li>
    }
    
</ul>

<h1 class="mt-4">Income</h1>
<ul class="list-group">
    @if (IncomeService.Incomes.Any())
    {
        @foreach (var item in IncomeService.Incomes)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @item.Name @item.Amount
                <button class="btn btn-danger btn-sm">Remove Income</button>
            </li>
        }
    }
    else
    {
        <li class="list-group-item">No income added yet.</li>
    }

</ul>
@code {
    protected override async Task OnInitializedAsync()
    {
        await IncomeService.LoadIncomesAsync();
        await ExpensiveService.LoadExpensesAsync();
    }

}